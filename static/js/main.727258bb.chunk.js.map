{"version":3,"sources":["home/home.tsx","components/syllabary-card/syllabary-card.tsx","components/syllabaryboard/syllabary-board.tsx","utils/syllabariesCharacters.js","deck.ts","utils/syllabary.js","syllabary/syllabary.tsx","components/color-selector/color-selector.tsx","components/memorycard/memory-card.tsx","components/memory-board/memory-game-board.tsx","play/play.tsx","icons/icon-linkd.svg","about/about.tsx","components/menu/topNavMenu.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Home","className","Card","isHiragana","type","style","height","width","src","process","alt","toLowerCase","SyllabaryBoard","cards","caseY","caseW","caseN","isValidCase","referenceTypes","indexOf","map","card","SYLLABARYCHAR","initializeDeck","syllabary","id","length","index","Math","floor","random","splice","push","char","_array","slice","i","randomIndex","temp","shuffle","Syllabary","useState","setCards","setisHiragana","isKatakana","setisKatakana","useEffect","reduce","acc","Deck","console","log","onClick","ColorSelector","colors","setSelected","color","code","background","MemoryCard","handleClick","disabled","flipped","solved","selectedColor","backgroundImage","borderRadius","GameBoard","dimension","key","includes","COLORS","name","KATAKANA_PALETTE","Play","React","setFlipped","setDimension","setSolved","setDisabled","getDefaultColor","setSelectedColor","resizeBoard","preloadImages","resizeListener","window","addEventListener","removeEventListener","Image","resetCards","sameCardClicked","isMatch","clickedCard","find","min","document","documentElement","clientWidth","clientHeight","paddingTop","setTimeout","_extends","Object","assign","target","arguments","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","d","fill","_ref3","_ref4","_ref5","_ref","svgRef","title","props","viewBox","ref","ForwardRef","forwardRef","About","href","ROUTES_MENU_PATH","children","path","icon","TopNavMenu","isOpenMenu","setIsOpenMenu","routePaths","location","useLocation","undefined","menuItem","pathname","to","toUpperCase","IconButton","App","exact","component","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"mcAIaA,G,MAAO,WAClB,OACE,yBAAKC,UAAU,mBACb,oG,OCEOC,G,MAA2C,SAAC,GAGlD,IAFLC,EAEI,EAFJA,WACAC,EACI,EADJA,KAIA,OACE,yBAAKH,UAAS,wBAAmBE,EAAa,YAAc,cAC1D,yBAAKF,UAAU,0BACb,yBACEI,MAAO,CAAEC,OANF,IAMUC,MALX,KAMNC,IAAG,UAAKC,kBAAL,gBACDN,EAAa,WAAa,WADzB,YAECC,EAFD,QAGHM,IAAG,UAAKN,EAAL,yBAEL,0BAAMH,UAAU,uBAAuBG,EAAKO,mBCdvCC,G,MAAsD,SAAC,GAG7D,IAFLC,EAEI,EAFJA,MACAV,EACI,EADJA,WAEMW,EAAQ,CAAC,KAAM,KAAM,MACrBC,EAAQ,CAAC,KAAM,MACfC,EAAQ,CAAC,KAETC,EAAc,SAACb,EAAcc,GAAf,OAClBA,EAAeC,QAAQf,IAAS,GAgBlC,OACE,yBAAKH,UAAU,6BACZY,EAAMO,KAAI,SAACC,GAAD,OACT,yBACEpB,UAAS,WAlBAG,EAmBPiB,EAAKjB,KAAKO,cAlBdM,EAAYb,EAAMU,GACb,OAELG,EAAYb,EAAMW,GACb,OAELE,EAAYb,EAAMY,GACb,QAEA,QAQM,8BAIT,kBAAC,EAAD,CAAMb,WAAYA,EAAYC,KAAMiB,EAAKjB,QAtBjC,IAACA,Q,gBCtBNkB,EAAgB,CAC3B,IACA,IACA,IACA,IACA,IACA,KACA,KACA,KACA,KACA,KAMA,KACA,MACA,KACA,KACA,KACA,KACA,MACA,MACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KCvBK,SAASC,IAOd,IALA,IAAMC,EC9Ba,CACnB,IACA,IACA,IACA,IACA,IACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,KACA,KACA,KACA,KACA,MACA,MACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,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","file":"static/js/main.727258bb.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"./home.scss\";\n\nexport const Home = () => {\n  return (\n    <div className=\"home__container\">\n      <h1>Home page is work in progress :)! Please visit the other sections</h1>\n    </div>\n  );\n};\n","import React from \"react\";\n\nimport \"./syllabary-card.scss\";\n\ninterface CardProps {\n  isHiragana: boolean;\n  type: string;\n}\n\nexport const Card: React.FunctionComponent<CardProps> = ({\n  isHiragana,\n  type,\n}) => {\n  const height = 153;\n  const width = 153;\n  return (\n    <div className={`syllabary-card${isHiragana ? \"-hiragana\" : \"-katakana\"}`}>\n      <div className=\"syllabary-card-content\">\n        <img\n          style={{ height, width }}\n          src={`${process.env.PUBLIC_URL}/img/${\n            isHiragana ? \"hiragana\" : \"katakana\"\n          }/${type}.png`}\n          alt={`${type} hiragana character`}\n        />\n        <span className=\"syllabary-card-char\">{type.toLowerCase()}</span>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\n\nimport { Card } from \"../syllabary-card/syllabary-card\";\n\nimport \"./syllabary-board.scss\";\n\ninterface BoardProps {\n  cards: any[];\n  isHiragana: boolean;\n}\n\nexport const SyllabaryBoard: React.FunctionComponent<BoardProps> = ({\n  cards,\n  isHiragana,\n}) => {\n  const caseY = [\"ya\", \"yu\", \"yo\"];\n  const caseW = [\"wa\", \"wo\"];\n  const caseN = [\"n\"];\n\n  const isValidCase = (type: string, referenceTypes: string[]) =>\n    referenceTypes.indexOf(type) >= 0;\n\n  const getCase = (type: string) => {\n    if (isValidCase(type, caseY)) {\n      return \"w-30\";\n    }\n    if (isValidCase(type, caseW)) {\n      return \"w-40\";\n    }\n    if (isValidCase(type, caseN)) {\n      return \"w-100\";\n    } else {\n      return \"w-18\";\n    }\n  };\n\n  return (\n    <div className=\"syllabary-board-container\">\n      {cards.map((card: any) => (\n        <div\n          className={`${getCase(\n            card.type.toLowerCase()\n          )} syllabary-card-container`}\n        >\n          <Card isHiragana={isHiragana} type={card.type} />\n        </div>\n      ))}\n    </div>\n  );\n};\n","export const SYLLABARYCHAR = [\n  \"A\",\n  \"I\",\n  \"U\",\n  \"E\",\n  \"O\",\n  \"KA\",\n  \"KI\",\n  \"KU\",\n  \"KE\",\n  \"KO\",\n  /* \"GA\",\n  \"GI\",\n  \"GU\",\n  \"GE\",\n  \"GO\",*/\n  \"SA\",\n  \"SHI\",\n  \"SU\",\n  \"SE\",\n  \"SO\",\n  \"TA\",\n  \"CHI\",\n  \"TSU\",\n  \"TE\",\n  \"TO\",\n  \"NA\",\n  \"NI\",\n  \"NU\",\n  \"NE\",\n  \"NO\",\n  \"HA\",\n  \"HI\",\n  \"HU\",\n  \"HE\",\n  \"HO\",\n  \"MA\",\n  \"MI\",\n  \"MU\",\n  \"ME\",\n  \"MO\",\n  \"YA\",\n  \"YU\",\n  \"YO\",\n  \"RA\",\n  \"RI\",\n  \"RU\",\n  \"RE\",\n  \"RO\",\n  \"WA\",\n  \"WO\",\n  \"N\"\n];\n","import { SYLLABARYCHAR } from \"./utils/syllabariesCharacters\";\nimport Syllabary from \"./utils/syllabary\";\n\nfunction shuffle(cards: any[]) {\n  const _array = cards.slice(0);\n  for (let i = 0; i < cards.length - 1; i++) {\n    let randomIndex = Math.floor(Math.random() * (i + 1));\n    let temp = _array[i];\n    _array[i] = _array[randomIndex];\n    _array[randomIndex] = temp;\n  }\n  return _array;\n}\n\nexport function getSyllabaryDeck() {\n  let id = 0;\n  const SyllabariesChar = [...SYLLABARYCHAR];\n  const syllabaryCards = SyllabariesChar.reduce((acc: any[], type) => {\n    acc.push({\n      id: id++,\n      type,\n    });\n    return acc;\n  }, []);\n  return syllabaryCards;\n}\n\nconst CARDS_NUMBER = 16;\nexport function initializeDeck() {\n  //función para generar baraja aleatoria a partir del silabario\n  const syllabary = Syllabary();\n\n  let cards = [];\n  let id = 0;\n  let char = true;\n  while (cards.length < CARDS_NUMBER) {\n    const index = Math.floor(Math.random() * syllabary.length);\n    let card = {\n      id: id++,\n      type: syllabary.splice(index, 1)[0],\n    };\n    cards.push(card);\n\n    cards.push({ ...card, char, id: id++ });\n  }\n  return shuffle(cards);\n}\n","export default () => [\n  \"A\",\n  \"I\",\n  \"U\",\n  \"E\",\n  \"O\",\n  \"KA\",\n  \"KI\",\n  \"KU\",\n  \"KE\",\n  \"KO\",\n  \"GA\",\n  \"GI\",\n  \"GU\",\n  \"GE\",\n  \"GO\",\n  \"SA\",\n  \"SHI\",\n  \"SU\",\n  \"SE\",\n  \"SO\",\n  \"TA\",\n  \"CHI\",\n  \"TSU\",\n  \"TE\",\n  \"TO\",\n  \"NA\",\n  \"NI\",\n  \"NU\",\n  \"NE\",\n  \"NO\",\n  \"HA\",\n  \"HI\",\n  \"HU\",\n  \"HE\",\n  \"HO\",\n  \"MA\",\n  \"MI\",\n  \"MU\",\n  \"ME\",\n  \"MO\",\n  \"YA\",\n  \"YU\",\n  \"YO\",\n  \"RA\",\n  \"RI\",\n  \"RU\",\n  \"RE\",\n  \"RO\",\n  \"WA\",\n  \"WO\",\n  \"N\"\n];\n","import React, { useState, useEffect } from \"react\";\nimport { SyllabaryBoard } from \"../components/syllabaryboard/syllabary-board\";\nimport * as Deck from \"../deck\";\n\nimport \"./syllabary.styles.scss\";\n\nexport const Syllabary = () => {\n  const [cards, setCards] = useState([]);\n  const [isHiragana, setisHiragana] = useState(false);\n  const [isKatakana, setisKatakana] = useState(false);\n\n  useEffect(() => {\n    //@ts-ignore\n    setCards(Deck.getSyllabaryDeck());\n  }, []);\n\n  console.log(\"hiragana \", isHiragana, \" katakana \", isKatakana);\n\n  return (\n    <div className=\"syllabary__container\">\n      <div className=\"syllabary-title\">\n        <h1 className=\"page-title\">\n          {!isKatakana && !isHiragana\n            ? \"Select syllabary\"\n            : isKatakana\n            ? \"Katakana syllabary\"\n            : \"Hiragana syllabary\"}\n        </h1>\n        <div>\n          <button\n            className={`syllabary-btn-hiragana${isHiragana ? \"-active\" : \"\"}`}\n            onClick={() => {\n              setisHiragana(true);\n              if (isKatakana) {\n                setisKatakana(false);\n              }\n            }}\n          >\n            Hiragana\n          </button>\n          <button\n            className={`syllabary-btn-katakana${isKatakana ? \"-active\" : \"\"}`}\n            onClick={() => {\n              setisKatakana(true);\n              if (isHiragana) {\n                setisHiragana(false);\n              }\n            }}\n          >\n            Katakana\n          </button>\n        </div>\n      </div>\n      <div\n        className={`syllabary__board${\n          !isHiragana && !isKatakana ? \"-hide\" : \"\"\n        }`}\n      >\n        <SyllabaryBoard isHiragana={isHiragana} cards={cards} />\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\n\nimport \"./color-selector.scss\";\n\ntype Color = {\n  name: string;\n  code: string;\n};\n\ninterface ColorSelectorProps {\n  colors: Color[];\n  setSelected: (colorCode: string) => void;\n}\n\nexport const ColorSelector: React.FunctionComponent<ColorSelectorProps> = ({\n  colors,\n  setSelected,\n}) => {\n  return (\n    <div className=\"selection-palette\">\n      {colors.map((color: Color) => {\n        return (\n          <div\n            onClick={() => setSelected(color.code)}\n            style={{ background: color.code }}\n            className=\"selection-palette-btn\"\n          ></div>\n        );\n      })}\n    </div>\n  );\n};\n","import React from \"react\";\n\nimport \"./styles.css\";\n\ninterface MemoryCardProps {\n  handleClick: (id: number) => void;\n  disabled: boolean;\n  id: number;\n  type: string;\n  char: boolean;\n  flipped: boolean;\n  solved: boolean;\n  height: number;\n  width: number;\n  isHiragana: boolean;\n  selectedColor: string;\n}\n\nexport const MemoryCard: React.FunctionComponent<MemoryCardProps> = ({\n  handleClick,\n  disabled,\n  id,\n  type,\n  char,\n  flipped,\n  solved,\n  height,\n  width,\n  isHiragana,\n  selectedColor,\n}) => {\n  return (\n    <div\n      className={`flip-container ${flipped ? \"flipped\" : \"\"}`}\n      onClick={() => (disabled ? null : handleClick(id))}\n    >\n      <div className=\"flipper\">\n        <div\n          className={flipped ? \"front\" : \"back\"}\n          style={{\n            width,\n            height,\n          }}\n        >\n          {flipped || solved ? (\n            <div\n              className=\"char-container\"\n              style={{\n                backgroundImage: `url(${process.env.PUBLIC_URL}/img/${\n                  isHiragana ? \"hiragana\" : \"katakana\"\n                }/${type}.png)`,\n              }}\n            >\n              <div>{char === true ? `${type}` : \"\"}</div>\n            </div>\n          ) : (\n            <div\n              style={{\n                height,\n                width,\n                background: selectedColor,\n                borderRadius: 30,\n              }}\n            ></div>\n          )}\n        </div>\n        {flipped || solved ? (\n          <img\n            style={{\n              height,\n              width,\n            }}\n            src={`${process.env.PUBLIC_URL}/img/${\n              isHiragana ? \"hiragana\" : \"katakana\"\n            }/${type}.png`}\n            alt={`${\n              isHiragana ? \"hiragana\" : \"katakana\"\n            } character for ${type}`}\n          />\n        ) : (\n          <div style={{ height, width }}></div>\n        )}\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\n\nimport { MemoryCard } from \"../memorycard/memory-card\";\n\nimport \"./styles.css\";\n\ninterface BoardProps {\n  disabled: boolean;\n  dimension: number;\n  cards: any[];\n  flipped: any[];\n  solved: any[];\n  isHiragana: boolean;\n  selectedColor: string;\n  handleClick: (id: any) => void;\n}\n\nexport const GameBoard: React.FunctionComponent<BoardProps> = ({\n  disabled,\n  dimension,\n  cards,\n  flipped,\n  solved,\n  selectedColor,\n  handleClick,\n  isHiragana,\n}) => {\n  return (\n    <div className=\"board\">\n      {cards.map((card: any) => (\n        <MemoryCard\n          key={card.id}\n          id={card.id}\n          type={card.type}\n          char={card.char}\n          width={dimension / 4.5}\n          height={dimension / 4.5}\n          //@ts-ignore\n          flipped={flipped.includes(card.id)}\n          //@ts-ignore\n          solved={solved.includes(card.id)}\n          handleClick={handleClick}\n          //@ts-ignore\n          disabled={disabled || solved.includes(card.id)}\n          isHiragana={isHiragana}\n          selectedColor={selectedColor}\n        />\n      ))}\n    </div>\n  );\n};\n","import React from \"react\";\nimport { ColorSelector } from \"../components/color-selector/color-selector\";\nimport { GameBoard } from \"../components/memory-board/memory-game-board\";\nimport { initializeDeck } from \"../deck\";\n\nimport \"./play.styles.scss\";\n\nconst COLORS = [\n  {\n    name: \"pink\",\n    code: \"#f39d91\",\n  },\n  {\n    name: \"yellow\",\n    code: \"#f8b133\",\n  },\n  {\n    name: \"grey\",\n    code: \"#6a7e85\",\n  },\n];\n\nconst KATAKANA_PALETTE = [\n  {\n    name: \"green\",\n    code: \"#11584a\",\n  },\n  {\n    name: \"yellow\",\n    code: \"#f8b133\",\n  },\n  {\n    name: \"grey\",\n    code: \"#6a7e85\",\n  },\n];\n\nexport const Play = () => {\n  const [isHiragana, setisHiragana] = React.useState(false);\n  const [isKatakana, setisKatakana] = React.useState(false);\n  const [cards, setCards] = React.useState([]);\n  const [flipped, setFlipped] = React.useState([]);\n  const [dimension, setDimension] = React.useState(400);\n  //tracking the ids from the solved cards\n  const [solved, setSolved] = React.useState([]);\n  //disabled the board when a card has been flipped and when are two cards\n  const [disabled, setDisabled] = React.useState(false);\n\n  const [selectedColor, setSelectedColor] = React.useState(\n    getDefaultColor(COLORS)\n  );\n\n  React.useEffect(() => {\n    resizeBoard();\n    //@ts-ignore\n    setCards(initializeDeck());\n  }, []);\n\n  React.useEffect(() => {\n    preloadImages();\n  }, cards);\n\n  React.useEffect(() => {\n    const resizeListener = window.addEventListener(\"resize\", resizeBoard);\n    //@ts-ignore\n    return () => window.removeEventListener(\"resize\", resizeListener);\n  });\n\n  const handleClick = (id: any) => {\n    setDisabled(true);\n    if (flipped.length === 0) {\n      //@ts-ignore\n      setFlipped([id]);\n      setDisabled(false);\n    } else {\n      if (sameCardClicked(id)) return;\n      //@ts-ignore\n      setFlipped([flipped[0], id]);\n      if (isMatch(id)) {\n        //@ts-ignore\n        setSolved([...solved, flipped[0], id]);\n        resetCards();\n      } else {\n        setTimeout(resetCards, 2000);\n      }\n    }\n  };\n\n  const preloadImages = () => {\n    cards.map((card) => {\n      //@ts-ignore\n      const src = `${process.env.PUBLIC_URL}/img/katakana/${card.type}.png`;\n      console.log(src);\n      new Image().src = src;\n    });\n  };\n\n  const resetCards = () => {\n    setFlipped([]);\n    setDisabled(false);\n  };\n\n  //@ts-ignore\n  const sameCardClicked = (id: any) => flipped.includes(id);\n\n  const isMatch = (id: any) => {\n    //@ts-ignore\n    const clickedCard = cards.find((card) => card.id === id);\n    //@ts-ignore\n    const flippedCard = cards.find((card) => flipped[0] === card.id);\n    //@ts-ignore\n    return flippedCard.type === clickedCard.type;\n  };\n\n  const resizeBoard = () => {\n    setDimension(\n      Math.min(\n        document.documentElement.clientWidth,\n        document.documentElement.clientHeight\n      )\n    );\n  };\n\n  function getDefaultColor(colors: any[]) {\n    if (colors.length > 0) {\n      return colors[0].code;\n    }\n  }\n\n  return (\n    <div className=\"play__container\">\n      <div className=\"play-title\">\n        <span className=\"play-display-instruction\">\n          {!isHiragana && !isKatakana\n            ? \"Select syllabary type to start playing\"\n            : isHiragana\n            ? \"Playing with Hiragana\"\n            : \"Playing with Katakana\"}\n        </span>\n        <div className=\"play-selection-controls\">\n          <div>\n            <div>\n              <button\n                className={`syllabary-btn-hiragana${\n                  isHiragana ? \"-active\" : \"\"\n                }`}\n                onClick={() => {\n                  setisHiragana(true);\n                  if (isKatakana) {\n                    setisKatakana(false);\n                  }\n                }}\n              >\n                Hiragana\n              </button>\n              <button\n                className={`syllabary-btn-katakana${\n                  isKatakana ? \"-active\" : \"\"\n                }`}\n                onClick={() => {\n                  setisKatakana(true);\n                  if (isHiragana) {\n                    setisHiragana(false);\n                  }\n                }}\n              >\n                Katakana\n              </button>\n            </div>\n            {(isHiragana || isKatakana) && (\n              <div className=\"play-selection-color\">\n                <ColorSelector colors={COLORS} setSelected={setSelectedColor} />\n                <ColorSelector\n                  colors={KATAKANA_PALETTE}\n                  setSelected={setSelectedColor}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n      <div className={`play-board${!isHiragana && !isKatakana ? \"-hide\" : \"\"}`}>\n        <h3 style={{ paddingTop: \"60px\" }}>\n          do you remember where the pair card is?\n        </h3>\n        <GameBoard\n          dimension={dimension}\n          cards={cards}\n          flipped={flipped}\n          handleClick={handleClick}\n          disabled={disabled}\n          solved={solved}\n          isHiragana={isHiragana}\n          selectedColor={selectedColor}\n        />\n      </div>\n    </div>\n  );\n};\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M18.1 35.8C16.9 35.8 15.7 35.7001 14.5 35.4001C5 33.5 -1.3 24.1 0.700002 14.5C1.2 12 2.2 9.70005 3.6 7.70005L4.8 8.60005C3.5 10.5 2.6 12.5 2.1 14.8C1.3 19 2.1 23.4 4.5 27C6.9 30.6 10.6 33.1 14.8 34C19.1 34.9001 23.4 34 27 31.6C30.6 29.2001 33.1 25.5 34 21.3C34.9 17 34 12.7001 31.6 9.10005C29.2 5.50005 25.5 3.00005 21.3 2.10005C16.2 1.00005 10.8 2.50005 7 6.10005L5.9 5.00005C10.1 1.10005 16 -0.599951 21.6 0.600049C26.3 1.50005 30.3 4.20005 32.9 8.20005C35.5 12.2 36.4 16.9 35.5 21.5C34.6 26.2001 31.9 30.2 27.9 32.8C25 34.8 21.6 35.8 18.1 35.8Z\",\n  fill: \"#455E67\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M13.8999 14.2H10.3999V25.6H13.8999V14.2Z\",\n  fill: \"#455E67\"\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12.1 12.7C13.2598 12.7 14.2 11.7598 14.2 10.6C14.2 9.4402 13.2598 8.5 12.1 8.5C10.9402 8.5 10 9.4402 10 10.6C10 11.7598 10.9402 12.7 12.1 12.7Z\",\n  fill: \"#455E67\"\n});\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19.5001 19.5999C19.5001 17.9999 20.2001 16.9999 21.6001 16.9999C22.9001 16.9999 23.5001 17.8999 23.5001 19.5999C23.5001 21.1999 23.5001 25.5999 23.5001 25.5999H27.0001C27.0001 25.5999 27.0001 21.3999 27.0001 18.3999C27.0001 15.3999 25.3001 13.8999 22.9001 13.8999C20.5001 13.8999 19.5001 15.7999 19.5001 15.7999V14.2999H16.1001V25.6999H19.5001C19.5001 25.5999 19.5001 21.3999 19.5001 19.5999Z\",\n  fill: \"#455E67\"\n});\n\nvar SvgIconLinkd = function SvgIconLinkd(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 37,\n    height: 36,\n    viewBox: \"0 0 37 36\",\n    fill: \"none\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4, _ref5);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgIconLinkd, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/icon-linkd.d2d0ed9e.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\n\nimport { ReactComponent as LinkedinIcon } from \"../icons/icon-linkd.svg\";\n\nimport \"./about.scss\";\n\nexport const About = () => {\n  return (\n    <div\n      className=\"about__container\"\n      //style={{ display: \"flex\", justifyContent: \"space-between\" }}\n    >\n      <div className=\"about-description\">\n        <div className=\"about-description-container\">\n          <h2>Syllabary Project</h2>\n          <span>\n            I'm Elena Casillas, I studied Visual Arts as a career, with a main\n            interest on photography. But I am currently working as Software\n            Developer.\n          </span>\n          <span>\n            In 2019 I decided to start a new career path related to Information\n            technologies so I joint a bootcamp called Laboratoria, and started\n            my programmer journey. As some of you may know the time in a\n            bootcamp is short but it was at least enough to provide me with the\n            first steps on React JS and Node.\n          </span>\n          <span>\n            <strong>Why is this project about syllabaries?</strong>\n          </span>\n          <span>\n            One of my reasons to create this project was to study and learn\n            Japanese syllabaries, in particular to practice katakana syllabary\n            (that is for me the more complicated). I thought it would also be\n            useful for those who are learning Japanese and who want to test\n            their knowledge or just to practice.\n          </span>\n          <span>\n            I found the creation of this app interesting and challenging and a\n            way to improve my tech skills. The first version of this app was\n            develop in August 2019 using React, hooks and prop types. A year\n            later I came up with some ideas from what I've learned studying and\n            working and decided to do a refactor. I am going to continue working\n            on completing the code changes and the UI changes needed to achieve\n            what I have in mind for a newer version.\n          </span>\n          <span>Stack</span>\n          <span>React, Typescript, Sass</span>\n        </div>\n      </div>\n      <div className=\"about-contact\">\n        <h2>Contact</h2>\n        <span className=\"about-contact-role\">Front-End Developer Junior</span>\n        <span>Elena Silvana Casillas</span>\n        <a href={\"https://www.linkedin.com/in/elena-silvana-c/\"}>\n          <LinkedinIcon className=\"about-contact-icon\" />\n        </a>\n      </div>\n    </div>\n  );\n};\n","import React, { ReactNode } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\n\nimport \"./topNavMenu.styles.scss\";\n\nconst ROUTES_MENU_PATH = {\n  name: \"public_routes\",\n  children: [\n    {\n      id: \"public.home\",\n      name: \"Home\",\n      path: \"/\",\n      icon: \"\",\n    },\n    {\n      id: \"public.syllabary\",\n      name: \"Syllabary\",\n      path: \"/syllabary\",\n      icon: \"\",\n    },\n    {\n      id: \"public.play\",\n      name: \"Play\",\n      path: \"/play\",\n      icon: \"\",\n    },\n    {\n      id: \"public.about\",\n      name: \"About\",\n      path: \"/about\",\n      icon: \"\",\n    },\n  ],\n};\n\nexport interface MenuProps {\n  children?: ReactNode;\n}\n\nexport const TopNavMenu: React.FunctionComponent<MenuProps> = ({\n  children,\n}) => {\n  const [isOpenMenu, setIsOpenMenu] = React.useState(false);\n\n  const routePaths = ROUTES_MENU_PATH;\n  const location = useLocation();\n\n  return (\n    <div>\n      <div className=\"topnav-menu\">\n        {routePaths !== undefined &&\n          routePaths.children.map((menuItem) => {\n            return (\n              <Link\n                className={`topnav-menu-item ${\n                  isOpenMenu ? \"topnav-menu-item-is-open\" : \"\"\n                } ${location.pathname === menuItem.path ? \"active-item\" : \"\"}`}\n                to={menuItem.path}\n                onClick={() => setIsOpenMenu(false)}\n              >\n                {menuItem.name.toUpperCase()}\n              </Link>\n            );\n          })}\n        <div className={`topnav-menu-icon${isOpenMenu ? \"-is-open\" : \"\"}`}>\n          <IconButton onClick={() => setIsOpenMenu(!isOpenMenu)}>\n            <MenuIcon />\n          </IconButton>\n        </div>\n      </div>\n      <div>{children}</div>\n    </div>\n  );\n};\n","import React, { Fragment } from \"react\";\nimport { HashRouter as Router, Route, Link } from \"react-router-dom\";\nimport { Home } from \"./home/home\";\nimport { Syllabary } from \"./syllabary/syllabary\";\nimport { Play } from \"./play/play\";\nimport { About } from \"./about/about\";\n\nimport { TopNavMenu } from \"./components/menu/topNavMenu\";\n\nimport \"./App.styles.scss\";\n\nfunction App() {\n  return (\n    <Fragment>\n      <Router>\n        <TopNavMenu>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/syllabary\" component={Syllabary} />\n          <Route path=\"/play\" component={Play} />\n          <Route path=\"/about\" component={About} />\n        </TopNavMenu>\n      </Router>\n    </Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}